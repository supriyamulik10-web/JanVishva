{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Supriya/OneDrive/Desktop/JanVishva/janvishwa/node_modules/%40clerk/nextjs/src/client-boundary/controlComponents.ts"],"sourcesContent":["'use client';\n\nexport {\n  ClerkLoaded,\n  ClerkLoading,\n  ClerkDegraded,\n  ClerkFailed,\n  SignedOut,\n  SignedIn,\n  Protect,\n  RedirectToSignIn,\n  RedirectToSignUp,\n  RedirectToTasks,\n  RedirectToUserProfile,\n  AuthenticateWithRedirectCallback,\n  RedirectToCreateOrganization,\n  RedirectToOrganizationProfile,\n} from '@clerk/clerk-react';\n\nexport { MultisessionAppSupport } from '@clerk/clerk-react/internal';\n"],"names":[],"mappings":";;AAEA;AAiBA,SAAS,8BAA8B","debugId":null}},
    {"offset": {"line": 101, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Supriya/OneDrive/Desktop/JanVishva/janvishwa/node_modules/%40clerk/clerk-react/src/errors.ts"],"sourcesContent":["export {\n  isClerkAPIResponseError,\n  isClerkRuntimeError,\n  isEmailLinkError,\n  isKnownError,\n  isMetamaskError,\n  isReverificationCancelledError,\n  EmailLinkErrorCode,\n  EmailLinkErrorCodeStatus,\n} from '@clerk/shared/error';\n"],"names":[],"mappings":";;;;AAAA","debugId":null}},
    {"offset": {"line": 114, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Supriya/OneDrive/Desktop/JanVishva/janvishwa/node_modules/%40clerk/nextjs/src/client-boundary/hooks.ts"],"sourcesContent":["'use client';\n\nexport {\n  useClerk,\n  useEmailLink,\n  useOrganization,\n  useOrganizationList,\n  useSession,\n  useSessionList,\n  useSignIn,\n  useSignUp,\n  useUser,\n  useReverification,\n} from '@clerk/clerk-react';\n\nexport {\n  isClerkAPIResponseError,\n  isClerkRuntimeError,\n  isEmailLinkError,\n  isKnownError,\n  isMetamaskError,\n  isReverificationCancelledError,\n  EmailLinkErrorCode,\n  EmailLinkErrorCodeStatus,\n} from '@clerk/clerk-react/errors';\n\nexport { usePromisifiedAuth as useAuth } from './PromisifiedAuthProvider';\n"],"names":[],"mappings":";;;AAEA;;AAaA;AAWA,SAA+B,0BAAe","debugId":null}},
    {"offset": {"line": 181, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Supriya/OneDrive/Desktop/JanVishva/janvishwa/node_modules/%40clerk/nextjs/src/app-router/client/keyless-cookie-sync.tsx"],"sourcesContent":["'use client';\n\nimport type { AccountlessApplication } from '@clerk/backend';\nimport { useSelectedLayoutSegments } from 'next/navigation';\nimport type { PropsWithChildren } from 'react';\nimport { useEffect } from 'react';\n\nimport { canUseKeyless } from '../../utils/feature-flags';\n\nexport function KeylessCookieSync(props: PropsWithChildren<AccountlessApplication>) {\n  const segments = useSelectedLayoutSegments();\n  const isNotFoundRoute = segments[0]?.startsWith('/_not-found') || false;\n\n  useEffect(() => {\n    if (canUseKeyless && !isNotFoundRoute) {\n      void import('../keyless-actions.js').then(m =>\n        m.syncKeylessConfigAction({\n          ...props,\n          // Preserve the current url and return back, once keys are synced in the middleware\n          returnUrl: window.location.href,\n        }),\n      );\n    }\n  }, [isNotFoundRoute]);\n\n  return props.children;\n}\n"],"names":[],"mappings":";;;;AAGA,SAAS,iCAAiC;AAE1C,SAAS,iBAAiB;AAE1B,SAAS,qBAAqB;;;;;;AAEvB,SAAS,kBAAkB,KAAA,EAAkD;IATpF,IAAA;IAUE,MAAM,eAAW,4KAAA,CAA0B;IAC3C,MAAM,kBAAA,CAAA,CAAkB,KAAA,QAAA,CAAS,CAAC,CAAA,KAAV,OAAA,KAAA,IAAA,GAAa,UAAA,CAAW,cAAA,KAAkB;IAElE,IAAA,+NAAA,EAAU,MAAM;QACd,IAAI,2MAAA,IAAiB,CAAC,iBAAiB;YACrC,KAAK,OAAO,uBAAuB,wHAAE,IAAA,CAAK,CAAA,IACxC,EAAE,uBAAA,CAAwB;oBACxB,GAAG,KAAA;oBAAA,mFAAA;oBAEH,WAAW,OAAO,QAAA,CAAS,IAAA;gBAC7B,CAAC;QAEL;IACF,GAAG;QAAC,eAAe;KAAC;IAEpB,OAAO,MAAM,QAAA;AACf","debugId":null}}]
}